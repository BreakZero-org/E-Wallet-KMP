import kotlin.Boolean;

CREATE TABLE IF NOT EXISTS CoinEntity(
    id TEXT PRIMARY KEY,
    platform_id TEXT NOT NULL,
    symbol TEXT NOT NULL,
    name TEXT NOT NULL,
    logo_uri TEXT NOT NULL,
    contract TEXT,
    is_active INTEGER AS Boolean,
    FOREIGN KEY(platform_id) REFERENCES AssetPlatform(id)
);

findAllCoinsInPlatform:
SELECT CoinEntity.id, CoinEntity.symbol, CoinEntity.name, CoinEntity.logo_uri, CoinEntity.contract, AssetPlatform.short_name AS platform_name
FROM CoinEntity
LEFT JOIN AssetPlatform ON CoinEntity.platform_id = AssetPlatform.id
WHERE platform_id = :platformId;

findAll:
SELECT *
FROM CoinEntity;

findAllCoins:
SELECT CoinEntity.id, CoinEntity.symbol, CoinEntity.name, CoinEntity.logo_uri, CoinEntity.contract, AssetPlatform.short_name AS platform_name
FROM CoinEntity
LEFT JOIN AssetPlatform ON CoinEntity.platform_id = AssetPlatform.id;

findCoinById:
SELECT CoinEntity.id, CoinEntity.symbol, CoinEntity.name, CoinEntity.logo_uri, CoinEntity.contract, AssetPlatform.short_name AS platform_name
FROM CoinEntity
LEFT JOIN AssetPlatform ON CoinEntity.platform_id = AssetPlatform.id
WHERE CoinEntity.id = :id;

deleteRows:
DELETE FROM CoinEntity WHERE id IN :ids;
