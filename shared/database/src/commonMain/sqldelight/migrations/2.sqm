import com.easy.wallet.database.TokenVals.Network;
import com.easy.wallet.database.TokenVals.TokenType;
import kotlin.Int;

CREATE TABLE IF NOT EXISTS token(
    coin_id TEXT NOT NULL PRIMARY KEY,
    coin_name TEXT NOT NULL,
    symbol TEXT NOT NULL,
    decimals INTEGER AS Int,
    type TEXT AS TokenType NOT NULL
);

CREATE TABLE IF NOT EXISTS contract (
    network TEXT AS Network NOT NULL,
    address TEXT NOT NULL,
    coin_id TEXT NOT NULL,
    FOREIGN KEY (coin_id) REFERENCES token(coin_id),
    PRIMARY KEY (coin_id, network)
);

-- DAI
INSERT INTO contract(network, address, coin_id) VALUES ("Ethereum","0x6b175474e89094c44da98b954eedeac495271d0f", "dai-erc20");
-- COMP
INSERT INTO contract(network, address, coin_id) VALUES ("Ethereum","0xc00e94Cb662C3520282E6f5717214004A7f26888", "comp-erc20");
-- UNI
INSERT INTO contract(network, address, coin_id) VALUES ("Ethereum","0x1f9840a85d5af5bf1d1762f925bdaddc4201f984", "uni-erc20");
-- CRO
INSERT INTO contract(network, address, coin_id) VALUES ("Ethereum","0xa0b73e1ff0b80914ab6fe0444e65848c4c34450b", "cro-erc20");

-- init default token
INSERT INTO token(coin_id, coin_name, symbol, decimals, type)
VALUES ("eth-main","Ethereum","ETH",18, "TOKEN");

INSERT INTO token(coin_id, coin_name, symbol, decimals, type)
VALUES ("comp-erc20","Compound","COMP",18, "ERC20");

INSERT INTO token(coin_id, coin_name, symbol, decimals, type)
VALUES ("uni-erc20","Uniswap","UNI",18, "ERC20");

INSERT INTO token(coin_id, coin_name, symbol, decimals, type)
VALUES ("dai-erc20","Dai Stablecoin","DAI",18, "ERC20");

INSERT INTO token(coin_id, coin_name, symbol, decimals, type)
VALUES ("cro-erc20","Cronos","CRO",8, "ERC20");

